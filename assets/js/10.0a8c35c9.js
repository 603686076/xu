(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(a,t,s){"use strict";s.r(t);var r=s(45),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),s("h2",{attrs:{id:"java中如何创建一个线程-实现collable接口和实现runnable的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java中如何创建一个线程-实现collable接口和实现runnable的区别"}},[a._v("#")]),a._v(" Java中如何创建一个线程？实现Collable接口和实现Runnable的区别？")]),a._v(" "),s("h2",{attrs:{id:"创建一个线程时-会在哪些区域分配空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个线程时-会在哪些区域分配空间"}},[a._v("#")]),a._v(" 创建一个线程时，会在哪些区域分配空间？")]),a._v(" "),s("h2",{attrs:{id:"java中线程间通信的方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java中线程间通信的方式有哪些"}},[a._v("#")]),a._v(" Java中线程间通信的方式有哪些？")]),a._v(" "),s("h2",{attrs:{id:"保证线程同步的机制有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保证线程同步的机制有哪些"}},[a._v("#")]),a._v(" 保证线程同步的机制有哪些？")]),a._v(" "),s("h2",{attrs:{id:"-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[a._v("#")])]),a._v(" "),s("h2",{attrs:{id:"什么是threadlocal-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是threadlocal-实现原理"}},[a._v("#")]),a._v(" 什么是ThreadLocal？实现原理？")]),a._v(" "),s("h2",{attrs:{id:"什么是aqs-aqs有什么作用-常见的基于aqs的组件有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是aqs-aqs有什么作用-常见的基于aqs的组件有哪些"}},[a._v("#")]),a._v(" 什么是AQS？AQS有什么作用？常见的基于AQS的组件有哪些？")]),a._v(" "),s("h2",{attrs:{id:"java的内存模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java的内存模型"}},[a._v("#")]),a._v(" java的内存模型？")]),a._v(" "),s("h2",{attrs:{id:"指令重排序是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令重排序是什么"}},[a._v("#")]),a._v(" 指令重"),s("a",{attrs:{href:""}},[a._v("排序")]),a._v("是什么？")]),a._v(" "),s("h2",{attrs:{id:"happens-before规则是什么-作用-有哪些规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#happens-before规则是什么-作用-有哪些规则"}},[a._v("#")]),a._v(" happens-before规则是什么？作用？有哪些规则？")]),a._v(" "),s("h2",{attrs:{id:"volatile关键字的作用-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile关键字的作用-实现原理"}},[a._v("#")]),a._v(" volatile关键字的作用？实现原理？")]),a._v(" "),s("h2",{attrs:{id:"什么是synchronized-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是synchronized-实现原理"}},[a._v("#")]),a._v(" 什么是synchronized？实现原理？")]),a._v(" "),s("h2",{attrs:{id:"synchronized可以修饰哪些内容-分别锁定的是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#synchronized可以修饰哪些内容-分别锁定的是什么"}},[a._v("#")]),a._v(" synchronized可以修饰哪些内容，分别锁定的是什么？")]),a._v(" "),s("h2",{attrs:{id:"jdk1-6后synchronized关键字底层做了哪些优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk1-6后synchronized关键字底层做了哪些优化"}},[a._v("#")]),a._v(" JDK1.6后synchronized关键字底层做了哪些优化？")]),a._v(" "),s("h2",{attrs:{id:"如何基于双重检查锁实现单例模式-volatile关键字的作用-为什么要两次加锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何基于双重检查锁实现单例模式-volatile关键字的作用-为什么要两次加锁"}},[a._v("#")]),a._v(" 如何基于双重检查锁实现单例模式？volatile关键字的作用？为什么要两次加锁？")])])}),[],!1,null,null,null);t.default=e.exports}}]);